{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/maze/easy_maze.txt","webpack:///./assets/maze/hard_maze.txt","webpack:///./assets/maze/medium_maze.txt","webpack:///./js/controls.js","webpack:///./js/entry.js","webpack:///./js/environment/camera.js","webpack:///./js/environment/columns.js","webpack:///./js/environment/environment_object.js","webpack:///./js/environment/minimap.js","webpack:///./js/environment/sky.js","webpack:///./js/environment/weapon.js","webpack:///./js/game.js","webpack:///./js/map.js","webpack:///./js/player/a_star_player.js","webpack:///./js/player/bfs_player.js","webpack:///./js/player/computer_player.js","webpack:///./js/player/dfs_player.js","webpack:///./js/player/human_player.js","webpack:///./js/player/player.js","webpack:///./js/util/bitmap.js","webpack:///./js/util/priority_queue.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,gK;;;;;;;;;;;ACAA,ovD;;;;;;;;;;;ACAA,of;;;;;;;;;;;;ACAA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAA0C;AAChB;;AAE1B;AACA;AACA,eAAe,2DAAM;AACrB;AACA,CAAC;;AAED;AACA;;AAEA,mBAAmB,6CAAI;AACvB;AACA,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AACQ;AACF;AACE;;AAEjB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,4CAAG,E;AACtB;AACA;AACA;AACA;AACA,KAAK;;AAEL,uBAAuB,gDAAO,E;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,sBAAsB,+CAAM;AAC5B;AACA;AACA;AACA;AACA,KAAK;;AAEL,uBAAuB,gDAAO;AAC9B;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAqD;;AAEtC,sBAAsB,2DAAiB;AACtD;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,0BAA0B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,O;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACvFA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAqD;;AAEtC,sBAAsB,2DAAiB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,gBAAgB;AACrC,uBAAuB,gBAAgB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,E;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAqD;;AAEtC,kBAAkB,2DAAiB;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAqD;;AAEtC,qBAAqB,2DAAiB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwB;AACwB;AACJ;AACA;AACK;AACf;AACQ;AACU;AACI;AACJ;;AAErC;AACf;AACA;AACA;AACA;AACA,eAAe,4CAAG,gBAAgB,iEAAQ;AAC1C,sBAAsB,4DAAW;AACjC;AACA,UAAU,0DAAS;AACnB,UAAU,0DAAS;AACnB,UAAU,6DAAW;AACrB;AACA,wBAAwB,iDAAQ;AAChC,sBAAsB,2DAAM;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,2DAAM;AAC9B;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,4CAAG,gBAAgB,iEAAQ;AAC9C;AACA;AACA,mBAAmB,4CAAG,gBAAgB,mEAAU;AAChD;AACA;AACA,mBAAmB,4CAAG,gBAAgB,iEAAQ;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,4DAAW;AACjC;AACA,UAAU,0DAAS;AACnB,UAAU,0DAAS;AACnB,UAAU,6DAAW;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACpNA;AAAA;AAAA;AAAmC;;AAEpB;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,oDAAM;AAC5B,2BAA2B,oDAAM;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC,+BAA+B,oDAAM;AACrC;AACA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC,+BAA+B,oDAAM;AACrC;AACA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC,+BAA+B,oDAAM;AACrC;AACA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC,+BAA+B,oDAAM;AACrC;AACA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC,+BAA+B,oDAAM;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;AC7IA;AAAA;AAAA;AAAA;AAA+C;AACI;;AAEpC,0BAA0B,wDAAc;AACvD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,kBAAkB,4DAAa;AAC/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAA+C;;AAEhC,wBAAwB,wDAAc;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAA8B;;AAEf,6BAA6B,+CAAM;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAA+C;;AAEhC,wBAAwB,wDAAc,E;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAA8B;AACM;;AAErB,0BAA0B,+CAAM;AAC/C;AACA;AACA;AACA,sBAAsB,oDAAM;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,oDAAM;AAChC;AACA;AACA,0BAA0B,oDAAM;AAChC;AACA;AACA,0BAA0B,oDAAM;AAChC;AACA;AACA,0BAA0B,oDAAM;AAChC;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;;ACdA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/entry.js\");\n","module.exports = \"+-+-+-+-+-+\\n|   |     |\\n+-+ + +-+ +\\n|     |   |\\n+ +-+-+ +-+\\n| |     | |\\n+ + +-+-+ +\\n| | |     |\\n+ + + + --+\\n| |   |    \\n+-+-+-+-+-+\"","module.exports = \"+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\n|   | |   |   |           |   |     |   |\\n+ + + + + + + + +-+-+-+-+ +-+ + +-+ +-+ +\\n| |     | | |   |         |   | |       |\\n+ +-+-+-+ + +-+-+ +-+-+-+-+ +-+ +-+-+-+ +\\n|       |   |   | |       |   | |       |\\n+-+-+-+ +-+ + + + + +-+-+ + + + + +-+-+-+\\n|   |   |   | | | | |     | |   |       |\\n+ + +-+-+ +-+ + + + + +-+-+ + +-+-+-+-+ +\\n| |     |     | | | | |     | |   |     |\\n+ +-+-+ +-+-+-+ + + + + +-+-+ + + + +-+-+\\n| |   | |   |   | | | | |     | | | |   |\\n+ +-+ + +-+ + +-+ + + + + +-+-+-+ +-+ + +\\n| |   |   |   |   | | | |   |   | |   | |\\n+ + +-+-+ +-+-+ +-+ + + +-+ + + + + +-+ +\\n| | | |   |     |   | | |   | | |   |   |\\n+ + + + +-+ +-+-+ +-+ + + +-+ + +-+-+-+ +\\n|   | |       |   |   | |     |         |\\n+-+-+ +-+-+ + + +-+ +-+ +-+-+-+ +-+-+ +-+\\n|     |     |     |     |   |   |   | | |\\n+ +-+-+ +-+-+-+-+-+-+-+-+-+ +-+-+ +-+ + +\\n|     | |   |     |   |     |     |     |\\n+ +-+ + + + +-+-+ + + + +-+ + +-+ + +-+-+\\n|   | |   |       | |   | |   |     |   |\\n+-+ + + +-+-+ +-+-+ + +-+ +-+ + + +-+ + +\\n|   |   |   | |     | |   |   | |   | | |\\n+ +-+-+-+-+ +-+ +-+-+-+ +-+ +-+ +-+ + + +\\n|         | |   |       |   |   |   | | |\\n+-+-+-+-+ + + +-+ +-+-+-+-+-+ +-+ +-+ + +\\n| |   |   | |   |         |     | |   | |\\n+ + + + +-+ +-+ +-+-+-+-+ +-+-+ + + +-+ +\\n|   |   | |     |   |   |     | |   |   |\\n+ +-+-+-+ +-+-+-+ + + + +-+-+ + +-+-+ +-+\\n|   |       |   | |   |     |   |   | | |\\n+-+ + +-+-+ +-+ + +-+-+-+-+ +-+-+-+ + + +\\n|   |     |   | | |   | |     |     |   |\\n+ +-+-+-+ +-+ + + + + + + + + + + +-+-+ +\\n| |   |   |   | | | | |   | | | |     | |\\n+ + + + +-+-+ + + + +-+ + + +-+ + +-+-+ +\\n|   |   |     |   |     | |     |        \\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\"","module.exports = \"+-+-+-+-+-+-+-+-+-+-+\\n|   | |   |       | |\\n+ + + + + + +-+-+ + +\\n| |     |   |   |   |\\n+ +-+-+-+-+-+ + +-+-+\\n| |   |   |   | |   |\\n+ + + +-+ + +-+ +-+ +\\n|   |   |   |     | |\\n+-+-+-+ + +-+-+-+ + +\\n|     | |       | | |\\n+ +-+-+ +-+-+-+ + + +\\n|   |     |     |   |\\n+ +-+ + + +-+ + +-+-+\\n| |   | |     | |   |\\n+ + +-+ +-+-+-+-+ + +\\n|   |   |         | |\\n+-+-+ +-+ +-+-+-+ + +\\n|   |     |     | | |\\n+ +-+ +-+-+ +-+ + +-+\\n|             | |    \\n+-+-+-+-+-+-+-+-+-+-+\"","export default class Controls {\n  constructor(player) {\n    this.codes = {\n      37: \"left\", // left arrow\n      39: \"right\", // right arrow\n      38: \"forward\", // up arrow\n      40: \"backward\", // down arrow\n      65: \"left\", // a\n      68: \"right\", // d\n      87: \"forward\", //w\n      83: \"backward\" // s\n    };\n    this.states = {\n      left: false,\n      right: false,\n      forward: false,\n      backward: false,\n      running: false\n    };\n    document.addEventListener(\"keydown\", this.onKey.bind(this, true), false);\n    document.addEventListener(\"keyup\", this.onKey.bind(this, false), false);\n  };\n\n  onKey(val, e) {\n    const state = this.codes[e.keyCode];\n\n    if (typeof state === \"undefined\") return;\n    this.states[state] = val;\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  };\n\n  onMouse(player, vals) {\n    const maxSpeed = 1000, // fastest possible mouse speed\n      speed = Math.min(vals.x, maxSpeed) / maxSpeed,\n      amount = Math.PI * speed;\n\n    if (player.direction > CIRCLE) {\n      amount -= CIRCLE;\n    } else if (player.direction < 0) {\n      amount += CIRCLE;\n    }\n\n    player.direction += amount;\n  };\n};","import Camera from './environment/camera';\nimport Game from './game';\n\nwindow.addEventListener(\"resize\", function() {\n  let fullscreen = camera.fullscreen;\n  camera = new Camera(display, 320, Math.PI * 0.4);\n  camera.fullscreen = fullscreen;\n});\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const display = document.getElementById('display');\n\n  const game = new Game(display);\n  game.play();\n})\n","import Sky from './sky';\nimport Columns from './columns';\nimport Weapon from './weapon';\nimport MiniMap from './minimap';\n\nexport default class Camera {\n  constructor(canvas, resolution, fov) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.width = canvas.width = window.innerWidth;\n    this.height = canvas.height = window.innerHeight;\n    this.resolution = resolution;\n    this.spacing = this.width / resolution;\n    this.fov = fov;\n    this.range = 14;\n    this.lightRange = 5;\n    this.scale = (this.width + this.height) / 1200;\n\n    this.sky = new Sky({ \n      ctx: this.ctx, \n      width: this.width, \n      height: this.height, \n      fov: this.fov \n    });\n\n    this.columns = new Columns({ \n      ctx: this.ctx,\n      height: this.height,\n      resolution: this.resolution,\n      spacing: this.spacing,\n      fov: this.fov, \n      range: this.range,\n      lightRange: this.lightRange\n    });\n\n    this.weapon = new Weapon({\n      ctx: this.ctx,\n      width: this.width,\n      height: this.height,\n      scale: this.scale\n    });\n\n    this.minimap = new MiniMap({\n      ctx: this.ctx,\n      width: this.width,\n      height: this.height\n    });\n\n    document.addEventListener(\"keyup\", this.onKey.bind(this, false), false);\n  };\n\n  onKey(val, e) {\n    if (e.keyCode === 70) {\n      this.toggleFullscreen();\n    }\n  };\n\n  render(map, player, ...computerPlayers) {\n    this.drawSky(map, player)\n    this.drawColumns(map, player);\n    this.drawWeapon(player);\n    this.drawMiniMap(map, player, ...computerPlayers);\n  };\n\n  drawSky(map, player) {\n    this.sky.render(player.direction, map.skybox, map.light);\n  };\n\n  drawColumns(map, player) {\n    this.columns.render(player, map);\n  };\n\n  drawWeapon(player) {\n    this.weapon.render(player.weapon, player.paces);\n  };\n\n  drawMiniMap(map, player, ...computerPlayers) {\n    this.minimap.render(map, player, ...computerPlayers)\n  };\n\n  toggleFullscreen() {\n    if (this.fullscreen) {\n      pointerRelease();\n      this.fullscreen = false;\n    } else {\n      lockPointer(display, controls.onMouse.bind(controls, player));\n      this.fullscreen = true;\n    }\n  };\n\n};\n","import EnvironmentObject from './environment_object';\n\nexport default class Columns extends EnvironmentObject {\n  constructor(options) {\n    super(options);\n  };\n\n  render(player, map) {\n    this.ctx.save();\n\n    for (let column = 0; column < this.resolution; column++) {\n      let angle = this.fov * (column / this.resolution - 0.5);\n      let ray = map.cast(player, player.direction + angle, this.range);\n      this.drawColumn(column, ray, angle, map);\n    }\n\n    this.ctx.restore();\n    this.ctx.save();\n    this.ctx.restore();\n  };\n\n  drawColumn(column, ray, angle, map) {\n    let wallTexture = map.wallTexture,\n      floorTexture = map.floorTexture,\n      left = Math.floor(column * this.spacing),\n      width = Math.ceil(this.spacing),\n      hit = -1;\n\n    while (++hit < ray.length && ray[hit].height <= 0);\n\n    for (let s = ray.length - 1; s >= 0; s--) {\n      const step = ray[s];\n      let textureX,\n        wall,\n        rainDrops,\n        rain;\n\n      if (map.weather) {\n        rainDrops = Math.pow(Math.random(), 3) * s;\n        rain = rainDrops > 0 && this.project(0.1, angle, step.distance);\n      }\n\n      if (s === hit) {\n        textureX = Math.floor(wallTexture.width * step.offset);\n        wall = this.project(step.height, angle, step.distance);\n\n        this.ctx.globalAlpha = 1;\n        this.ctx.drawImage(\n          wallTexture.image,\n          textureX,\n          0,\n          1,\n          wallTexture.height,\n          left,\n          wall.top,\n          width,\n          wall.height\n        );\n\n        this.ctx.fillStyle = \"#000000\";\n        this.ctx.globalAlpha = Math.max(\n          (step.distance + step.shading) / this.lightRange - map.light,\n          0\n        );\n        this.ctx.fillRect(left, wall.top, width, wall.height);\n      }\n\n\n      this.ctx.fillStyle = '#ffffff';\n      this.ctx.globalAlpha = 0.15;\n\n      if (map.weather) {\n        while (--rainDrops > 0) this.ctx.fillRect(left, Math.random() * rain.top, 1, rain.height);\n      }  \n    }\n  };\n\n  project(height, angle, distance) {\n    const z = distance * Math.cos(angle);\n    const wallHeight = (this.height * height) / z;\n    const bottom = (this.height / 2) * (1 + 1 / z);\n\n    return {\n      top: bottom - wallHeight,\n      height: wallHeight\n    };\n  };\n};","export default class EnvironmentObject {\n  constructor(options) {\n    this.ctx = options.ctx;\n    this.width = options.width;\n    this.height = options.height;\n    this.resolution = options.resolution;\n    this.spacing = options.spacing;\n    this.fov = options.fov;\n    this.range = options.range;\n    this.lightRange = options.lightRange;\n    this.scale = options.scale;\n  };\n\n  render() {\n    throw \"Rendering error\";\n  };\n};","import EnvironmentObject from './environment_object';\n\nexport default class MiniMap extends EnvironmentObject {\n  constructor(options) {\n    super(options);\n    this.width = 0.3 * options.width;\n    this.height = this.width;\n    this.x = 20;\n    this.y = options.height - this.height - 20;\n  };\n\n  render(map, humanPlayer, ...computerPlayers) {\n    this.drawMap(map);\n    this.drawExit(map);\n    computerPlayers.forEach(\n      (player, markerIdx) => this.drawPlayer('computer', player, map.size, markerIdx + 1)\n    );\n    this.drawPlayer('human', humanPlayer, map.size);\n  };\n\n  drawMap(map) {\n    let blockWidth = this.width / map.size,\n      blockHeight = this.height / map.size,\n      idx;\n\n    this.ctx.save();\n\n    this.ctx.globalAlpha = 0.3;\n    this.ctx.fillRect(this.x, this.y, this.width, this.height);\n    this.ctx.globalAlpha = 0.4;\n\n    this.ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n\n    for (let row = 0; row < map.size; row++) {\n      for (let col = 0; col < map.size; col++) {\n        idx = row * map.size + col;\n\n        if (map.discovered[idx] && map.wallGrid[idx]) {\n          this.ctx.fillRect(\n            this.x + blockWidth * col,\n            this.y + blockHeight * row,\n            blockWidth,\n            blockHeight\n          );\n        }\n      }\n    }\n\n    this.ctx.fillStyle = \"rgba(255, 255, 255, 0.3)\";\n    this.ctx.save();\n    this.ctx.restore();    \n  };\n\n  drawExit(map) {\n    const color = \"#00FF00\",\n      exitX = this.x + ((map.size - 0.5) / map.size) * this.width,\n      exitY = this.y + ((map.size - 1.5) / map.size) * this.width,\n      r = 0.4 * this.width / map.size,\n      m = 0.3;\n\n      this.ctx.moveTo(exitX, exitY);\n      this.ctx.translate(exitX, exitY);\n      this.ctx.globalAlpha = 1;\n      this.ctx.fillStyle = color;\n\n      this.ctx.beginPath();\n    \n      this.ctx.moveTo(0, 0 - r);\n      for (let i = 0; i < 5; i++) {\n        this.ctx.rotate(Math.PI / 5);\n        this.ctx.lineTo(0, 0 - (r * m));\n        this.ctx.rotate(Math.PI / 5);\n        this.ctx.lineTo(0, 0 - r);\n      }\n\n      this.ctx.fill();\n      this.ctx.restore();\n      this.ctx.save();\n  };\n\n  drawPlayer(type, player, scale, markerIdx = 0) {\n    const colors = [\"#FF0000\", \"#048BA8\", \"#EF798A\", \"#F18F01\"],\n      markerSize = 1.5 * this.width / scale,\n      playerX = (player.x / scale) * this.width,\n      playerY = (player.y / scale) * this.width,\n      markerX = this.x + playerX,\n      markerY = this.y + playerY;\n\n    this.ctx.moveTo(markerX, markerY);\n    this.ctx.translate(markerX, markerY);\n    this.ctx.globalAlpha = 1;\n    this.ctx.fillStyle = colors[markerIdx];\n\n    if (type === 'human') {\n      this.ctx.rotate(player.direction - Math.PI * 0.5);\n    }\n\n    this.ctx.beginPath();\n\n    switch (type) {\n      case 'human':\n        // this.ctx.lineTo(0, markerSize / 10);\n        this.ctx.lineTo(-markerSize / 6, -markerSize / 10);\n        this.ctx.lineTo(0, markerSize / 3);\n        this.ctx.lineTo(markerSize / 6, -markerSize / 10);\n\n        this.ctx.fill();\n\n        this.ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\n\n        this.ctx.arc(0, 0, markerSize, 0, 2 * Math.PI)\n        this.ctx.fill();\n        break\n      case 'computer':\n        this.ctx.arc(0, 0, markerSize / 5, 0, 2 * Math.PI)\n        break\n    }\n\n    this.ctx.fill();\n    this.ctx.restore();\n    this.ctx.save();\n  };\n\n \n};","import EnvironmentObject from './environment_object';\n\nexport default class Sky extends EnvironmentObject {\n  constructor(options) {\n    super(options);\n  };\n\n  render(direction, sky, ambient) {\n    const width = this.width * (2 * Math.PI / this.fov);\n    const left = (-width * direction) / (2 * Math.PI);\n\n    this.ctx.save();\n    this.ctx.drawImage(sky.image, left, 0, width, this.height);\n\n    if (left < width - this.width) {\n      this.ctx.drawImage(sky.image, left + width, 0, width, this.height);\n    }\n\n    if (ambient > 0) {\n      this.ctx.fillStyle = \"#ffffff\";\n      this.ctx.globalAlpha = ambient * 0.1;\n      this.ctx.fillRect(0, this.height * 0.5, this.width, this.height * 0.5);\n    }\n\n    this.ctx.restore();\n  };\n};","import EnvironmentObject from \"./environment_object\";\n\nexport default class Weapon extends EnvironmentObject {\n  constructor(options) {\n    super(options);\n  };\n\n  render(weapon, paces) {\n    const bobX = Math.cos(paces * 2) * this.scale * 6;\n    const bobY = Math.sin(paces * 4) * this.scale * 6;\n    const left = this.width * 0.55 + bobX;\n    const top = this.height * 0.6 + bobY;\n\n    this.ctx.drawImage(\n      weapon.image,\n      left,\n      top,\n      weapon.width * this.scale,\n      weapon.height * this.scale\n    );\n  };\n};\n","import Map from './map';\nimport HumanPlayer from './player/human_player';\nimport DFSPlayer from './player/dfs_player';\nimport BFSPlayer from './player/bfs_player';\nimport AStarPlayer from './player/a_star_player';\nimport Controls from './controls';\nimport Camera from './environment/camera';\nimport EasyMaze from '../assets/maze/easy_maze.txt';\nimport MediumMaze from '../assets/maze/medium_maze.txt';\nimport HardMaze from '../assets/maze/hard_maze.txt';\n\nexport default class Game {\n  constructor(display) {\n    this.frame = this.frame.bind(this);\n    this.lastTime = 0;\n    this.callback = function () {};\n    this.map = Map.createFromMaze(EasyMaze);\n    this.player = new HumanPlayer(1.5, 1.5, 0);\n    this.computerPlayers = [\n      new DFSPlayer(1.4, 1.5, this.map),\n      new BFSPlayer(1.6, 1.5, this.map),\n      new AStarPlayer(1.5, 1.5, this.map)\n    ];\n    this.controls = new Controls();\n    this.camera = new Camera(display, 320, Math.PI * 0.4);\n  };\n\n  play() {\n    this.listenForResize();\n    this.listenForDifficulty();\n    this.listenForSidebarClicks();\n\n    this.start(seconds => {\n      if (this.over()) this.conclude();\n\n      this.map.update(seconds);\n\n      const prevX = this.player.x, prevY = this.player.y;\n      this.player.update(this.controls.states, this.map, seconds);\n      const nextX = this.player.x, nextY = this.player.y;\n\n      this.computerPlayers.forEach(player =>\n        player.update(prevX, prevY, nextX, nextY)\n      );\n\n      this.camera.render(this.map, this.player, ...this.computerPlayers);\n    });\n  };\n\n  start(callback) {\n    this.callback = callback;\n    requestAnimationFrame(this.frame);\n  };\n\n  frame(time) {\n    const seconds = (time - this.lastTime) / 1000;\n    this.lastTime = time;\n    if (seconds < 0.2) this.callback(seconds);\n    requestAnimationFrame(this.frame);\n  };\n\n  over() {\n    return (\n      this.player.x >= this.map.size - 0.5 ||\n      this.player.y >= this.map.size - 1\n    );\n  };\n\n  conclude() {\n    const steps = document.getElementsByClassName('steps');\n\n    Array.from(steps).forEach(\n      player => {\n        switch (player.id) {\n          case \"player\":\n            player.innerHTML = player.innerHTML.replace(/\\d+/, this.player.steps);\n            break;\n          case \"dfs\":\n            player.innerHTML = player.innerHTML.replace(/\\d+/, this.computerPlayers[0].steps);\n            break;\n          case \"bfs\":\n            player.innerHTML = player.innerHTML.replace(/\\d+/, this.computerPlayers[1].steps);\n            break;\n          case \"a*\":\n            player.innerHTML = player.innerHTML.replace(/\\d+/, this.computerPlayers[2].steps);\n            break;\n        }\n      }\n    );\n\n    document\n      .getElementById('game-over')\n      .className = 'modal'\n  };\n\n  listenForResize() {\n    window.addEventListener(\"resize\", function () {\n      let fullscreen = this.camera.fullscreen;\n      this.camera = new Camera(display, 320, Math.PI * 0.4);\n      this.camera.fullscreen = fullscreen;\n    });\n  };\n\n  listenForDifficulty() {\n    const setDifficulty = (e) => {\n      switch (e.target.innerHTML) {\n        case 'Easy':\n        this.map = Map.createFromMaze(EasyMaze);\n        break;\n      case 'Medium': \n        this.map = Map.createFromMaze(MediumMaze);\n        break;\n      case 'Hard':\n        this.map = Map.createFromMaze(HardMaze);\n        break;\n      }\n\n      this.resetPlayers();\n      this.closeModals();\n    };\n\n    this.addListenerToCollection('difficulty-btn', setDifficulty);\n  };\n\n  listenForSidebarClicks() {\n    this.listenForSettingsChange();\n    this.listenForMute();\n\n    const openModal = (e) => {\n      this.closeModals();\n\n      switch (e.currentTarget.id) {\n        case 'about-icon':\n          document\n            .getElementById('about')\n            .classList.remove('hidden');\n          break;\n        case 'settings-icon':\n          document\n            .getElementById('settings')\n            .classList.remove('hidden');\n          break;\n      }\n    };\n\n    this.addListenerToCollection('sidebar-icon', openModal);\n\n    document\n      .getElementById('display')\n      .addEventListener(\"click\", this.closeModals)\n  };\n\n  listenForSettingsChange() {\n    const changeTheme = (e) => {\n      console.log(e.currentTarget)\n      this.map.receiveNewTheme(e.currentTarget.id);\n      this.closeModals();\n    };\n\n    const changeWeapon = (e) => {\n      this.player.receiveNewWeapon(e.currentTarget.id);\n      this.closeModals();\n    };\n\n    this.addListenerToCollection('theme-btn', changeTheme);\n    this.addListenerToCollection('weapon-btn', changeWeapon);\n  };\n\n  closeModals() {\n    const modals = document.getElementsByClassName('modal');\n\n    Array.from(modals).forEach(modal => {\n      if (!modal.className.includes('hidden')) {\n        modal.classList.add('hidden');\n      }\n    });\n  };\n\n  listenForMute() {\n    const toggleAudio = (e) => {\n      if (audio.muted) {\n        audio.muted = false;\n        icon.classList.remove(\"fa-volume-up\");\n        icon.classList.add('fa-volume-mute')\n      } else {\n        audio.muted = true;\n        icon.classList.remove('fa-volume-mute');\n        icon.classList.add('fa-volume-up');\n      }\n    };\n\n    const audio = document.getElementById('audio');\n    const icon = document.getElementById('volume-icon');\n    icon.addEventListener(\"click\", toggleAudio);\n  };\n\n  resetPlayers() {\n    this.player = new HumanPlayer(1.5, 1.5, 0);\n    this.computerPlayers = [\n      new DFSPlayer(1.4, 1.5, this.map), \n      new BFSPlayer(1.6, 1.5, this.map), \n      new AStarPlayer(1.5, 1.5, this.map)\n    ];\n  };\n\n  addListenerToCollection(classname, callback) {\n    const collection = document.getElementsByClassName(classname);\n    \n    Array.from(collection).forEach(\n      el => el.addEventListener(\"click\", callback)\n    );\n  };\n};","import Bitmap from './util/bitmap';\n\nexport default class Map {\n  static createFromMaze(maze) {\n    const wallGrid = maze\n      .split('')\n      .filter(char => ['+','-', '|', ' '].includes(char))\n      .map(char => char === ' ' ? 0 : 1);\n\n    return new Map(Uint8Array.from(wallGrid));\n  };\n\n  constructor(wallGrid) {\n    this.wallGrid = wallGrid;\n    this.size = Math.sqrt(wallGrid.length);\n    this.skybox = new Bitmap(\"assets/img/deathvalley_panorama.jpg\", 4000, 1290);\n    this.wallTexture = new Bitmap(\"assets/img/stone_wall.jpg\", 1024, 1024);\n    this.weather = true;\n    this.light = 0;\n    this.discovered = new Array(wallGrid.length).fill(false);\n  };\n\n  index(x, y) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (x > this.size || y > this.size) return null;\n    return y * this.size + x;\n  };\n\n  get(x, y) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n    if (x < 0 || x > this.size - 1 || y < 0 || y > this.size - 1) return -1;\n    return this.wallGrid[this.index(x, y)];\n  };\n\n  discover(x, y) {\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        if (this.get(x + i, y + j) !== -1) {\n          this.discovered[this.index(x + i, y + j)] = true;\n        }\n      }\n    }\n  };\n\n  receiveNewTheme(theme) {\n    switch (theme) {\n      case \"ancient-ruins\":\n        this.skybox = new Bitmap(\"assets/img/deathvalley_panorama.jpg\", 4000, 1290);\n        this.wallTexture = new Bitmap(\"assets/img/stone_wall.jpg\", 1024, 1024);\n        this.weather = true;\n        this.setAudio(\"ominous.mp3\");\n        break;\n      case \"underwater\":\n        this.skybox = new Bitmap(\"assets/img/underwater.jpg\", 4000, 1290);\n        this.wallTexture = new Bitmap(\"assets/img/blue_wall.jpg\", 1024, 1024);\n        this.weather = false;\n        this.setAudio(\"ominous.mp3\");\n        break;\n      case \"space\":\n        this.skybox = new Bitmap(\"assets/img/space.jpg\", 4000, 1290);\n        this.wallTexture = new Bitmap(\"assets/img/moon_wall.jpg\", 1024, 1024);\n        this.weather = false;\n        this.setAudio(\"space.mp3\");\n        break;\n      case \"mario\":\n        this.skybox = new Bitmap(\"assets/img/mario.jpg\", 4000, 1290);\n        this.wallTexture = new Bitmap(\"assets/img/brick_wall.jpg\", 1024, 1024);\n        this.weather = false;\n        this.setAudio(\"mario.mp3\");\n        break;\n      case \"aa\":\n        this.skybox = new Bitmap(\"assets/img/aa_panorama.jpg\", 4000, 1290);\n        this.wallTexture = new Bitmap(\"assets/img/white_wall.jpg\", 1024, 1024);\n        this.weather = false;\n        this.setAudio(\"ominous.mp3\");\n        break;\n    }\n  };\n\n  cast(point, angle, range) {\n    let self = this,\n      sin = Math.sin(angle),\n      cos = Math.cos(angle),\n      noWall = {\n        length2: Infinity\n      };\n\n    return ray({\n      x: point.x,\n      y: point.y,\n      height: 0,\n      distance: 0\n    });\n\n    function ray(origin) {\n      const stepX = step(sin, cos, origin.x, origin.y);\n      const stepY = step(cos, sin, origin.y, origin.x, true);\n      const nextStep =\n        stepX.length2 < stepY.length2\n          ? inspect(stepX, 1, 0, origin.distance, stepX.y)\n          : inspect(stepY, 0, 1, origin.distance, stepY.x);\n\n      if (nextStep.distance > range) return [origin];\n      return [origin].concat(ray(nextStep));\n    }\n\n    function step(rise, run, x, y, inverted) {\n      if (run === 0) return noWall;\n      const dx = run > 0 ? Math.floor(x + 1) - x : Math.ceil(x - 1) - x;\n      const dy = dx * (rise / run);\n      return {\n        x: inverted ? y + dy : x + dx,\n        y: inverted ? x + dx : y + dy,\n        length2: dx * dx + dy * dy\n      };\n    }\n\n    function inspect(step, shiftX, shiftY, distance, offset) {\n      const dx = cos < 0 ? shiftX : 0;\n      const dy = sin < 0 ? shiftY : 0;\n      step.height = self.get(step.x - dx, step.y - dy);\n      step.distance = distance + Math.sqrt(step.length2);\n      if (shiftX) step.shading = cos < 0 ? 2 : 0;\n      else step.shading = sin < 0 ? 2 : 1;\n      step.offset = offset - Math.floor(offset);\n      return step;\n    }\n  };\n\n  update(seconds) {\n    if (this.weather) {\n      if (this.light > 0) this.light = Math.max(this.light - 10 * seconds, 0);\n      else if (Math.random() * 5 < seconds) this.light = 2;\n    }\n  };\n\n  setAudio(audio) {\n    document.getElementById(\"audio\").src = \"./assets/audio/\" + audio;\n  };\n};","import ComputerPlayer from \"./computer_player\";\nimport PriorityQueue from \"../util/priority_queue\";\n\nexport default class AStarPlayer extends ComputerPlayer {\n  constructor(x, y, map) {\n    super(x, y, map);\n\n    const finish = [this.map.size - 1, this.map.size - 2];\n\n    const manhattanDistance = (pos) =>\n      Math.abs(pos[0] - finish[0]) + Math.abs(pos[1] - finish[1])\n    \n    const comparator = (pos1, pos2) =>\n      manhattanDistance(pos1) < manhattanDistance(pos2)\n\n    this.pq = new PriorityQueue(comparator);\n    this.pq.push([this.x, this.y]);\n    this.pq.push([this.x + 1, this.y]);\n  };\n\n  algorithmStep() {\n    if (this.pq.isEmpty()) return [this.x, this.y];\n\n    const nextMove = this.pq.pop();\n    this.visit(nextMove);\n\n    const unvisitedMoves = this.getUnvisitedMoves(nextMove);\n    unvisitedMoves.forEach(move => this.pq.push(move));\n\n    return nextMove;\n  };\n};","import ComputerPlayer from \"./computer_player\";\n\nexport default class BFSPlayer extends ComputerPlayer {\n  constructor(x, y, map) {\n    super(x, y, map);\n    this.q = [];\n    this.q.push([this.x, this.y]);\n    this.q.push([this.x + 1, this.y]);\n  };\n\n  algorithmStep() {\n    if (this.q.length === 0) return [this.x, this.y];\n\n    const nextMove = this.q.shift();\n    this.visit(nextMove);\n\n    const unvisitedMoves = this.getUnvisitedMoves(nextMove);\n    unvisitedMoves.forEach(\n      move => this.q.push(move)\n    );\n\n    return nextMove;\n  };\n};","import Player from './player';\n\nexport default class ComputerPlayer extends Player {\n  constructor(x, y, map) {\n    super(x, y);\n    this.map = map;\n    this.visited = new Array(map.size * map.size).fill(false);\n    this.from = new Array(map.size * map.size).fill(null);\n    this.steps = 0;\n\n    this.visit([this.x, this.y]);\n  };\n\n  move() {\n    [this.x, this.y] = this.algorithmStep();\n    this.steps++;\n  };\n\n  update(prevX, prevY, nextX, nextY) {\n    if (\n      Math.floor(this.x) >= this.map.size - 1 &&\n      Math.floor(this.y) >= this.map.size - 2\n    ) {\n      return;\n    }\n\n    if (\n      Math.floor(prevX) !== Math.floor(nextX) ||\n      Math.floor(prevY) !== Math.floor(nextY)\n    ) {\n      this.move();\n    }\n  };\n\n  algorithmStep() {\n    throw \"No algorithm specified.\"\n  };\n\n  getValidMoves(fromPos = [this.x, this.y]) {\n    const possibleMoves = [\n      [fromPos[0] + 1, fromPos[1]],\n      [fromPos[0], fromPos[1] + 1],\n      [fromPos[0] - 1, fromPos[1]],\n      [fromPos[0], fromPos[1] - 1]\n    ];\n\n    return possibleMoves.filter(\n      move => this.map.get(move[0], move[1]) === 0\n    );\n  };\n\n  getUnvisitedMoves(fromPos = [this.x, this.y]) {\n    return this.getValidMoves(fromPos).filter(\n      move => !this.visited[this.index(move)]\n    );\n  };\n\n  visit(pos) {\n    this.visited[this.index(pos)] = true;\n    this.from[this.index(pos)] = [this.x, this.y];\n  };\n\n  index(pos) {\n    return pos[1] * this.map.size + pos[0];\n  };\n};","import ComputerPlayer from \"./computer_player\";\n\nexport default class DFSPlayer extends ComputerPlayer {  \n  algorithmStep() {\n    const unvisitedMoves = this.getUnvisitedMoves();\n\n    if (unvisitedMoves.length > 0) {\n      const randomMove = unvisitedMoves[Math.floor(Math.random() * unvisitedMoves.length)];\n      this.visit(randomMove);\n      return randomMove;\n    } else {\n      return this.backtrack();\n    }\n  };\n\n  backtrack() {\n    return this.from[(this.index([this.x, this.y]))];\n  };\n};","import Player from './player';\nimport Bitmap from \"../util/bitmap\";\n\nexport default class HumanPlayer extends Player {\n  constructor(x, y, direction) {\n    super(x, y);\n    this.direction = direction;\n    this.weapon = new Bitmap(\"assets/img/knife_hand.png\", 320, 320);\n    this.paces = 0;\n    this.prevX = this.x;\n    this.prevY = this.y;\n    this.steps = 0;\n  };\n\n  rotate(angle) {\n    this.direction = (this.direction + angle + 2 * Math.PI) % (2 * Math.PI);\n  };\n\n  move(distance, map) {\n    this.prevX = this.x;\n    this.prevY = this.y;    \n    const dx = Math.cos(this.direction) * distance;\n    const dy = Math.sin(this.direction) * distance;\n\n    if (map.get(this.x + dx, this.y) <= 0) this.x += dx;\n    if (map.get(this.x, this.y + dy) <= 0) this.y += dy;\n\n    this.paces += distance;\n    this.incrementSteps(map);\n    this.discover(map);\n  };\n\n  update(controls, map, seconds) {\n    if (controls.left) this.rotate(-Math.PI * seconds);\n    if (controls.right) this.rotate(Math.PI * seconds);\n    if (controls.forward) this.move(3 * seconds, map);\n    if (controls.backward) this.move(-3 * seconds, map);\n  };\n\n  discover(map) {\n    map.discover(this.x, this.y);\n  };\n\n  incrementSteps(map) {\n    if (\n      (\n        Math.floor(this.x) !== Math.floor(this.prevX) ||\n        Math.floor(this.y) !== Math.floor(this.prevY)\n      ) &&\n        map.index(Math.ceil(this.x), Math.ceil(this.y))\n    ) {\n      this.steps++;\n    }\n  };\n\n  receiveNewWeapon(weapon) {\n    switch (weapon) {\n      case 'knife':\n        this.weapon = new Bitmap(\"assets/img/knife_hand.png\", 320, 320);\n        break;\n      case 'sniper':\n        this.weapon = new Bitmap(\"assets/img/sniper.png\", 320, 320);\n        break;\n      case 'raygun':\n        this.weapon = new Bitmap(\"assets/img/ray_gun.png\", 320, 320);\n        break;\n      case 'ctci':\n        this.weapon = new Bitmap(\"assets/img/ctci.png\", 400, 320);\n        break;\n    }\n  };\n};\n","\nexport default class Player {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  };\n\n  move() {\n    throw \"Unable to move.\"\n  };\n\n  update() {\n    throw \"Unable to update.\"\n  };\n};","export default class Bitmap {\n  constructor(src, width, height) {\n    this.image = new Image();\n    this.image.src = src;\n    this.width = width;\n    this.height = height;\n  };\n};\n","const top = 0;\nconst parent = i => ((i + 1) >>> 1) - 1;\nconst left = i => (i << 1) + 1;\nconst right = i => (i + 1) << 1;\n\nexport default class PriorityQueue {\n  constructor(comparator = (a, b) => a > b) {\n    this._heap = [];\n    this._comparator = comparator;\n  };\n\n  size() {\n    return this._heap.length;\n  };\n\n  isEmpty() {\n    return this.size() == 0;\n  };\n\n  peek() {\n    return this._heap[top];\n  };\n\n  push(...values) {\n    values.forEach(value => {\n      this._heap.push(value);\n      this._siftUp();\n    });\n    return this.size();\n  };\n\n  pop() {\n    const poppedValue = this.peek();\n    const bottom = this.size() - 1;\n\n    if (bottom > top) {\n      this._swap(top, bottom);\n    }\n\n    this._heap.pop();\n    this._siftDown();\n    return poppedValue;\n  };\n\n  replace(value) {\n    const replacedValue = this.peek();\n    this._heap[top] = value;\n    this._siftDown();\n    return replacedValue;\n  };\n\n  _greater(i, j) {\n    return this._comparator(this._heap[i], this._heap[j]);\n  };\n\n  _swap(i, j) {\n    [this._heap[i], this._heap[j]] = [this._heap[j], this._heap[i]];\n  };\n\n  _siftUp() {\n    let node = this.size() - 1;\n    while (node > top && this._greater(node, parent(node))) {\n      this._swap(node, parent(node));\n      node = parent(node);\n    }\n  };\n\n  _siftDown() {\n    let node = top;\n    while (\n      (left(node) < this.size() && this._greater(left(node), node)) ||\n      (right(node) < this.size() && this._greater(right(node), node))\n    ) {\n      let maxChild =\n        right(node) < this.size() && this._greater(right(node), left(node))\n          ? right(node)\n          : left(node);\n      this._swap(node, maxChild);\n      node = maxChild;\n    }\n  };\n};\n"],"sourceRoot":""}